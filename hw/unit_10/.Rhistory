load("/Users/osknowsys/Downloads/N-MHSS-2015-DS0001-bndl-data-r/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
head(mh2015_puf, 2)
mh2015_puf$LST
factor(mh2015_puf$LST)
s <- factor(mh2015_puf$LST)
s
levels(s)
levels(mh2015_puf$LST)
levels(mh2015_puf$LST)[1]
library("stringr", lib.loc="/usr/local/lib/R/3.4/site-library")
library(stringr)
str_trim(levels(mh2015_puf$LST)[1])
str_trim(levels(mh2015_puf$LST))
library("dplyr", lib.loc="/usr/local/lib/R/3.4/site-library")
?dplyr
filter(mh2015_puf, FACILITYTYPE == "Veterans Administration medical center (VAMC)")
mh2015_puf$FACILITYTYPE
filter(mh2015_puf, FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
va_data <- filter(mh2015_puf, FACILITYTYPE == "Veterans Administration medical center (VAMC) or other VA health care facility")
va_data$LST
unwanted_territoris = c("AK  ", "HI  ", "AS  ", "FM  ", "VI  ", "PR  ", "PW  ", "MP  ", "MH  ", "GH  ")
unwanted_territoris
va_data$LST[1]
va_data$LST[2]
unwanted_territoris[1]
unwanted_territoris <- c("AK", "HI", "AS", "FM", "VI", "PR", "PW", "MP", "MH", "GU")
filter(va_data, LST %in% unwanted_territoris)
va_data$LST
va_data$LST[3]
type(va_data$LST[3])
class(va_data$LST[3])
mode(va_data$LST[3])
va_data$LST[3]
factor(unwanted_territoris)
unwanted_territoris <- factor(unwanted_territoris)
filter(va_data, LST %in% unwanted_territoris)
levels(va_data$LST)
str_trim(levels(va_data$LST))
filter(va_data, str_trim(levels(va_data$LST)), %in% unwanted_territoris)
filter(va_data, str_trim(va_data$LST), %in% unwanted_territoris)
filter(va_data, va_data$LST, %in% unwanted_territoris)
filter(va_data, str_trim(levels(va_data$LST)) %in% unwanted_territoris)
filter(va_data, va_data$LST %in% unwanted_territoris)
filter(va_data, va_data$LST %in% c("VI  "))
levels(va_data$LST)
unwanted_territoris <- c("AK    ", "HI    ", "AS    ","VI    ","PR    ","GU    ")
filter(va_data, ! LST %in% unwanted_territoris)
mainland_us <- filter(va_data, ! LST %in% unwanted_territoris)
table(mainland_us$LST)
subset(va_data, ! LST %in% unwanted_territoris)
mainland_us <- subset(va_data, ! LST %in% unwanted_territoris)
table(mainland_us$LST)
mainland_us <- subset(va_data, ! LST %in% levels(unwanted_territoris))
table(mainland_us$LST)
mainland_us <- filter(va_data, ! LST %in% levels(unwanted_territoris))
table(mainland_us$LST)
filter(va_data, !va_data$LST  %in% unwanted_territoris)
mainland_us <- filter(va_data, !va_data$LST  %in% unwanted_territoris)
mainland_us$LST
va_data$LST[!unwanted_territoris,]
va_data$LST
levels(va_data$LST)
filter(levels(va_data$LST)
)
filter(va_data, !levels(va_data$LST)  %in% unwanted_territoris)
filter(va_data, !va_data$LST  %in% levels(unwanted_territoris))
mainland_us <- filter(va_data, !va_data$LST  %in% levels(unwanted_territoris))
mainland_us$LST
levels(mainland_us$LST)
mainland_us <- filter_if(va_data, !va_data$LST  %in% levels(unwanted_territoris))
mainland_us <- filter_if(va_data, va_data$LST  %in% levels(unwanted_territoris))
filter(va_data$LST, %in% unwanted_territoris)
filter(levels(va_data$LST), %in% unwanted_territoris)
filter(va_data$LST, levels(va_data$LST) %in% unwanted_territoris)
filter(va_data, levels(va_data$LST) %in% unwanted_territoris)
filter(levels(va_data$LST), levels(va_data$LST) %in% unwanted_territoris)
filter(levels(va_data$LST), va_data$LST %in% unwanted_territoris)
factor(unwanted_territoris)
filter(va_data, va_data$LST %in% factor(unwanted_territoris))
mainland_us <- filter(va_data, !va_data$LST %in% factor(unwanted_territoris))
levels(mainland_us$LST)
filter_at(va_data, va_data$LST, !va_data$LST %in% factor(unwanted_territoris))
filter_at(va_data, va_data$LST, any_vars(!va_data$LST %in% factor(unwanted_territoris)))
mainland_us <- filter_at(va_data, va_data$LST, any_vars(!va_data$LST %in% factor(unwanted_territoris)))
mainland_us$LST
mainland_us <- filter_at(va_data, va_data$LST, any_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
levels(mainland_us$LST)
mainland_us <- filter_at(va_data, vars(va_data$LST), any_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
levels(mainland_us$LST)
mainland_us <- filter_at(va_data, vars(levels(va_data$LST)), any_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
mainland_us <- filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris)))
)
mainland_us$LST
mainland_us <- filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris)))
)
mainland_us$LST
?data.table
?table
filter_all(va_data, aall_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
mainland_us <- filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
mainland_us$LST
mainland_us <- filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
table(mainland_us$LST)
levels(va_data$LST)
vars(levels(va_data$LST))
filter_at(va_data, vars(levels(va_data$LST)), any_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
filter_at(va_data, vars(levels(va_data$LST)), all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
filter_all(va_data, vars(levels(va_data$LST)), all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
?droplevels()
mainland_us <- filter_all(va_data, all_vars(!va_data$LST %in% levels(factor(unwanted_territoris))))
droplevels(mainland_us)
mainland_us <- droplevels(mainland_us)
mainland_us$LST
levels(mainland_us$LST)
va_counts_by_state <- table(mainland_us)
table(mainland_us)
table(mainland_us$LST)
data.frame(table(mainland_us$LST))
va_counts_by_state <- data.frame(table(mainland_us$LST))
names(va_counts_by_state) <- c("State", "NumberOfLocations")
va_counts_by_state
va_counts_by_state$State
va_counts_by_state$State[1]
str_trim(va_counts_by_state$State)
read.csv("statsize.csv")
read.csv("statesize.csv")
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
df <- read.csv(url(fileLocation))
head(df)
df$Age <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(df$Age_Group) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
head(df)
levels(df$Age) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
head(df)
d1 <- subset(df, Impressions>0)
d1
d1$CTR <- d1$Clicks/d1$Impressions
library(ggplot2)
ggplot(subset(d1, Impressions>0), aes(x=Impressions, fill=Age_Group))+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=1)
ggplot(subset(d1, Impressions>0), aes(x=Impressions, fill=Age))+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=1)
ggplot(subset(d1, CTR>0), aes(x=CTR, fill=Age))+
labs(title="Click-through Rate by Age Group (05/01/2012)")+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=.025) +
xlab("Probability of Click Through Rate: Clicks per Impression") +
ylab("Count") +
scale_fill_brewer(palette="Dark2", labels=c("Female", "Male")) +
# scale_fill_manual(values=c("purple", "orange"), labels=c("Female", "Male")) +
geom_histogram(binwidth=.025)
df$Age_Group <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
df$Age_Group <- cut(df$Age_Group, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(df$Age_Group) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
# Click through by age group
ggplot(subset(d1, CTR>0), aes(x=CTR, fill=Age_Group))+
labs(title="Click-through Rate by Age Group (05/01/2012)")+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=.025) +
xlab("Probability of Click Through Rate: Clicks per Impression") +
ylab("Count") +
scale_fill_brewer(palette="Dark2", labels=c("Female", "Male")) +
# scale_fill_manual(values=c("purple", "orange"), labels=c("Female", "Male")) +
geom_histogram(binwidth=.025)
# Dividing numbers into categories
df$Age_Group <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
df <- read.csv(url(fileLocation))
df <- read.csv(url(fileLocation))
# Dividing numbers into categories
df$Age_Group <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
df <- read.csv(url(fileLocation))
# Dividing numbers into categories
df$Age_Group <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(df$Age_Group) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
# Single Day: Plot distributions
# Problem: CTR is notoriously small-- small percentage click at all!
d1 <- subset(df, Impressions>0)
d1$CTR <- d1$Clicks/d1$Impressions
library(ggplot2)
# Impressions by age group
ggplot(subset(d1, Impressions>0), aes(x=Impressions, fill=Age_group))+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=1)
# Click through by age group
ggplot(subset(d1, CTR>0), aes(x=CTR, fill=Age_Group))+
labs(title="Click-through Rate by Age Group (05/01/2012)")+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=.025) +
xlab("Probability of Click Through Rate: Clicks per Impression") +
ylab("Count") +
scale_fill_brewer(palette="Dark2", labels=c("Female", "Male")) +
# scale_fill_manual(values=c("purple", "orange"), labels=c("Female", "Male")) +
geom_histogram(binwidth=.025)
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
df <- read.csv(url(fileLocation))
# Dividing numbers into categories
df$Age_Group <- cut(df$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
levels(df$Age_Group) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
# Single Day: Plot distributions
# Problem: CTR is notoriously small-- small percentage click at all!
d1 <- subset(df, Impressions>0)
d1$CTR <- d1$Clicks/d1$Impressions
library(ggplot2)
# Impressions by age group
ggplot(subset(d1, Impressions>0), aes(x=Impressions, fill=Age_Group))+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=1)
# Click through by age group
ggplot(subset(d1, CTR>0), aes(x=CTR, fill=Age_Group))+
labs(title="Click-through Rate by Age Group (05/01/2012)")+
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth=.025) +
xlab("Probability of Click Through Rate: Clicks per Impression") +
ylab("Count") +
scale_fill_brewer(palette="Dark2", labels=c("Female", "Male")) +
# scale_fill_manual(values=c("purple", "orange"), labels=c("Female", "Male")) +
geom_histogram(binwidth=.025)
?url
head(mainland_us)
head(va_counts_by_state)
statesize <- read.csv('statesize.csv')
statesize
?paste
merge(va_counts_by_state, statesize)
va_counts_by_state$State
va_counts_by_state$State[1]
paste(mainland_us$LST)
paste(statesize$StateName)
paste(statesize$Abbrev)
paste(va_counts_by_state$State)
str_trim(va_counts_by_state$State)
va_counts_by_state$State <- str_trim(va_counts_by_state$State)
va_counts_by_state$State
?merge
statesize
statesize[-c(2,4),]
statesize <- statesize[-c(2,4),]
statesize <- read.csv('statesize.csv')
statesize
statesize <- statesize[-c(2,11),]
statesize
merge(va_counts_by_state, statesize, by=c("Abbrev", "State"))
merge(va_counts_by_state, statesize, by.x="State", by.y="Abbrev")
state_info <- merge(va_counts_by_state, statesize, by.x="State", by.y="Abbrev")
state_info$NumberOfLocations / (state_info$SqMiles / 1000)
per_thousand <- state_info$SqMiles / 1000
state_info$NumberOfLocations / per_thousand
per_thousand <- state_info$NumberOfLocations / (state_info$SqMiles / 1000)
head(state_info)
state_info[, 6] <- per_thousand
state_info
names(state_info)[6]
names(state_info)[6] <- "VAper1000Sqmiles"
state_info
reorder(state_info)
?reorder
reorder(state_info$State, -state_info$VAper1000Sqmiles)
reorder(state_info$State, state_info$VAper1000Sqmiles)
