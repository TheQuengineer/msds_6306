install.packages("rvest")
library("rvest", lib.loc="/usr/local/lib/R/3.4/site-library")
?read_html
imdb_page <- read_html(x="http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
imdb_page
html_node(imdb_page, css = "simpleTable simpleCreditsTable")
cast <-imdb_page %>% html_node(imdb_page, xpath = "/html/body/div[1]/div/div[4]/div[3]/div[1]/div[1]/div[2]/table[3]") %>% html_table(header = TRUE)
html_node(imdb_page, xpath = "/html/body/div[1]/div/div[4]/div[3]/div[1]/div[1]/div[2]/table[3]")
cast <- html_node(imdb_page, xpath = "/html/body/div[1]/div/div[4]/div[3]/div[1]/div[1]/div[2]/table[3]")
cast <- html_table(cast)
cast
library("stringr", lib.loc="/usr/local/lib/R/3.4/site-library")
cast$X1
cast$X2
cast$X3
cast$X4
cast[, c(2,4)]
casts <- casts[, c(2,4)]
casts <- cast[, c(2,4)]
casts
casts[!1,]
head(casts)
casts[!1]
casts[!1,]
casts
casts <- casts[!c(1),]
casts
cast < casts
cast <- casts
casts
cast
page_data <- read_html(x = "http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
page_table <- html_node(page_data, xpath = "/html/body/div[1]/div/div[4]/div[3]/div[1]/div[1]/div[2]/table[3]")
casts <- html_table(page_table)
casts
casts
casts[1,]
c <- !casts[1,]
c <- casts[!1,]
casts
casts <- casts[, c(2,4)]
head(casts)
casts[-1,]
casts <- casts[-1,]
head(casts)
names(casts)
names(casts) <- c("ACTOR", "CHARACTER")
casts
casts[casts$ACTOR == "Warwick"]
casts[casts$ACTOR == "Warwick Davis",]
?gsub()
regexpr(pattern = '^Warwick', text="Warwick Davis Griphook /  \n ")
casts[casts$ACTOR == "Warwick Davis",]
?grepl
casts[, grepl("$Flitwick")]
casts[, grepl("$Flitwick", x = casts$CHARACTER)]
casts[, grepl("^Flitwick", x = casts$CHARACTER)]
casts[, grepl("Flitwick", x = casts$CHARACTER)]
casts[grepl(pattern = "^Warwick"),]
casts[grepl(pattern = "^Warwick", casts$ACTOR),]
class(casts[grepl(pattern = "^Warwick", casts$ACTOR),])
warwick <- casts[grepl(pattern = "^Warwick", casts$ACTOR),]
warwick$CHARACTER
warwick$CHARACTER <- "Griphook/Professor Filius Flitwick"
warwick
casts[grepl(pattern = "^Warwick", casts$ACTOR),]$CHARACTER
casts[grepl(pattern = "^Warwick", casts$ACTOR),]$CHARACTER <- "Griphook/Professor Filius Flitwick"
casts
head(casts, 12)
casts[casts$ACTOR == "Rest of cast listed alphabetically:"]
casts[casts$ACTOR == "Rest of cast listed alphabetically:",]
casts[-casts$ACTOR == "Rest of cast listed alphabetically:",]
casts <-  [-casts[-casts$ACTOR == "Rest of cast listed alphabetically:",]]
casts[-c(casts$ACTOR == "Rest of cast listed alphabetically:"),]
casts[!c(casts$ACTOR == "Rest of cast listed alphabetically:"),]
casts
str_remove_all(casts[150,], "\n")
library(stringr)
?str_remove
str_extract(casts[150,], "\n")
str_extract_all(casts[150,], "\n")
casts[150,]
c <- lapply(casts, sub, pattern = "\n". replacment = "")
str_replace_all(casts, "[\r\n]" , "")
casts
str_replace_all(casts$ACTOR, "[\r\n]" , "")
str_replace_all(casts$CHARACTER, "[\r\n]" , "")
casts
casts$CHARACTER <- str_replace_all(casts$CHARACTER, "[\r\n]" , "")
casts
casts$Actor[134,]
casts$ACTOR[134,]
casts$ACTOR
casts
casts <- casts[!c(casts$Actor == "Rest of cast listed alphabetically:"),]
casts
page_data <- read_html(x = "http://www.imdb.com/title/tt1201607/fullcredits?ref_=tt_ql_1")
page_table <- html_node(page_data, xpath = "/html/body/div[1]/div/div[4]/div[3]/div[1]/div[1]/div[2]/table[3]")
casts <- html_table(page_table)
casts
casts <- casts[, c(2,4)]
casts <- casts[-1,]
casts$X4 <- str_replace_all(casts$X4, "[\r\n]" , "")
names(casts) <- c("Actor", "Character")
casts[grepl(pattern = "^Warwick", casts$Actor),]$Character <- "Griphook/Professor Filius Flitwick"
c <- casts[!c(casts$Actor == "Rest of cast listed alphabetically:"),]
c
c[13,]
c[12,]
c[12,]$Actor
str_split(c[12,]$Actor, pattern= " ")
str_split_fixed(c[12,]$Actor, " ", 2)
str_split_fixed(c[12,]$Actor, " ", 1)
str_split_fixed(c[12,]$Actor, " ", 3)
str_split_fixed(c[12,]$Actor, " ", 2)
str_split_fixed(c[12,]$Actor, "  {[a-z]}", 2)
str_split_fixed(c[12,]$Actor, " \\ {[a-z]}", 2)
str_split_fixed(c[12,]$Actor, " [a-z]", 2)
str_split_fixed(c[12,]$Actor, " ", 2)
str_split_fixed(c[12,]$Actor, "[:alpha:][:space:][:alpha:] ", 2)
str_split_fixed(c[12,]$Actor, "[:alpha:][:space:]", 2)
str_split_fixed(c[12,]$Actor, "[:space:]", 2)
str_split_fixed(c[12,]$Actor, "[:alpha:]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:][:alpha:]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:][A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:]+[A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:][A-Za-z]+", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:][A-Za-z]+", 1)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:]+[A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z]+[:space:][A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "+[A-Za-z][:space:][A-Za-z]", 2)
str_split_fixed(c[12,]$Actor, "[:space:]{2,}", 2)
str_split_fixed(c[12,]$Actor, "[:space:]{2,}", 1)
str_split_fixed(c[12,]$Actor, "[:space:]{2}", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z]{2}", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z]{2,}", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z]{2,3}", 2)
str_split_fixed(c[12,]$Actor, "[A-Za-z][:space:]{2,}", 2)
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,2}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,1}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,3}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{1,2}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{1,1}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,1}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,2}")
str_split(c[12,]$Actor, pattern = "[A-Za-z][:space:]{2,3}")
str_split(c[12,]$Actor, pattern = " (?=[^ ]+$)")
str_split(c$Actor, pattern = " (?=[^ ]+$)")
str_split(c$Actor, pattern = " (?=[^ ]+$)")[1]
str_split(c$Actor, pattern = " (?=[^ ]+$)")
?aggregate()
aggregate(c, FUN=str_split(c$Actor, pattern = " (?=[^ ]+$)"))
lapply(c$Actor, FUN=str_split(pattern = " (?=[^ ]+$)") )
lapply(c, FUN=str_split(c$Actor, pattern = " (?=[^ ]+$)") )
split_names <- str_split(c$Actor, pattern = " (?=[^ ]+$)"))
split_names <- str_split(c$Actor, pattern = " (?=[^ ]+$)")
split_names$X
class(split_names)
?matrix
matrix(split_names, nrow = 149, ncol = 2, dimnames = list(c("FirstName"), c("SirName")))
matrix(split_names, nrow = 149, ncol = 2, dimnames = list(c("FirstName", "SirName"))
)
split_names
d <- data.frame(matrix(unlist(split_names), nrow=149, byrow=T),stringsAsFactors=FALSE)
d
names(d) <- c("Firstname, Surname")
?cbind
e < merge (c, d, by="Firstname")
e <-merge(c, d, by="Firstname")
e <-merge(d, c, by="Firstname")
d
names(d)
names(d) <- c("Firstname", "Surname")
d
names(d)
e <-merge(d, c, by="Firstname")
e <-merge(c, d, by="Firstname")
d
cbind(d$Firstname, c)
split_names <- str_split(c$Actor, pattern = " (?=[^ ]+$)")
split_names
espn_data <- read_html(x = "http://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs")
espn_table <- html_node(espn_data, css ="#my-players-table > div.mod-container.mod-table > div:nth-child(3) > table")
shooting_stats <- html_table(espn_table)
shooting_stats
shooting_stats
head(shooting_statas)
head(shooting_stats)
head(shooting_stats, 3)
shooting_stats <- shooting_stats[!1,]
shooting_stats
shooting_stats
shooting_stats <- html_table(espn_table)
shooting_stats
shooting_stats <- shooting_stats[-2,]
shooting_stats
shooting_stats <- html_table(espn_table)
head(shooting_stats)
shooting_stats[-1,]
shooting_stats <- shooting_stats[-1,]
shooting_stats
colnames(shooting_stats)
colnames(shooting_stats) <- as.character(unlist(shooting_stats[1,]))
shooting_stats <- shooting_stats[-1,]
shooting_stats
shooting_stats <- shooting_stats[-nrow(shooting_stats),]
shooting
shooting_stats <- shooting_stats[-nrow(shooting_stats),]
shooting_stats
shooting_stats <- html_table(espn_table)
shooting_stats <- shooting_stats[-1,]
colnames(shooting_stats) <-as.character(unlist(shooting_stats[1,]))
shooting_stats <- shooting_stats[-1,]
shooting_stats <- shooting_stats[-nrow(shooting_stats),]
shooting_stats
str_split(shooting_stats$PLAYER, ", ")
names_and_pos <- str_split(shooting_stats$PLAYER, ", ")
df <-  data.frame(matrix(unlist(names_and_pos), nrow=17, byrow=T),stringsAsFactors=FALSE)
df
names(df) <- c("Name", "Position")
df
shooting_stats
shooting_stats[, c(2:15)]
stats <- shooting_stats[, c(2:15)]
foo <- merge(df, stats)
foo
foo <- merge(df, stats, by="Player")
foo <- cbind(df, stats)
foo
sa_playerstats <- cbind(df, stats)
sa_playerstats
type(sa_playerstats$FGM)
class(sa_playerstats$FGM)
sapply(sa_playerstats, mode)
?transform
sapply(sa_playerstats, FUN=as.numeric())
sapply(sa_playerstats, FUN=as.numeric)
shooting_stats
sa_playerstats
sapply(sa_playerstats[,c(3:15)], as.numeric)
sapply(sa_playerstats, mode)
?transform.data.frame()
?transform
transform(sa_playerstats, FGM=as.numeric(FGM), FGA=as.numeric(FGM))
foo <- transform(sa_playerstats, FGM=as.numeric(FGM), FGA=as.numeric(FGM))
sapply(foo, mode)
sa_playerstats
sapply(sa_playerstats, mode)
foo <- as.data.frame(sapply(sa_playerstats, as.numeric))
foo
foo <- as.data.frame(sapply(sa_playerstats[,c(3:16)], as.numeric))
foo
sapply(foo, mode)
df
stats <- as.data.frame(sapply(sa_playerstats[,c(3:16)], as.numeric))
sa_playerstats <- cbind(df, stats)
sapply(sa_playerstats, mode)
library("vcd", lib.loc="/usr/local/lib/R/3.4/site-library")
x <- table(sa_playerstats$Name, sa_playerstats$Position, sa_playerstats$FG%)
x <- table(sa_playerstats$Position, sa_playerstats$FG%)
x <- table(sa_playerstats$Name, sa_playerstats$Position, sa_playerstats$`FG%`)
x
x <- table(sa_playerstats$Position, sa_playerstats$`FG%`)
x
barplot(x, main="Stats", xlab="Position", ylab="FG %", horiz = TRUE, col=c("Red", "Blue", "Green", "purle", "Black"), legend=rownames(x), beside= TRUE)
barplot(x, main="Stats", xlab="Position", ylab="FG %", horiz = TRUE, col=c("Red", "Blue", "Green", "purple", "Black"), legend=rownames(x), beside= TRUE)
x <- table(sa_playerstats$Name, sa_playerstats$`FG%`)
x
?barplot
barplot(sa_playerstats$`FG%`, main = "Foo", xlab="Player", horiz = TRUE, col = c("Red", "Blue", "Green", "purple", "Black")
)
library("ggplot2", lib.loc="/usr/local/lib/R/3.4/site-library")
ggplot(sa_playerstats, aes(fill=sa_playerstats$Position, y=sa_playerstats$`FG%`, x=sa_playerstats$Name)) +
geom_bar(position="dodge", stat="identity")
sa_playerstats
?element_text
